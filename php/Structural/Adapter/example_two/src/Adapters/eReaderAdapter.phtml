<?php

namespace AdapterThree\Adapters;

use AdapterThree\Contracts\TransaportInterface;
use AdapterThree\Services\eReaderInterface;

/**
 * Este es el Adapatador.
 * Implementa la interfaz del tipo que se espera (BookInterface)
 * Sirve adpatar las clases de la interfaz eReaderInterface a la interfaz BookInterface.
 * Por lo tanto los metodos se adaptan a la interfaz BookInterface.
 *
 * ESta clase transforma/adapta la interfaz eReaderInterface a la interfaz BookInterface
 */
class eReaderAdapter implements TransaportInterface
{
    private eReaderInterface $reader;

    public function __constructor(eReaderInterface $reader): void
    {
        $this->reader = $reader;
    }

    // El metodo open no se encuentra en la interfaz eReaderInterface
    // Por lo tanto se debe adaptar a la interfaz BookInterface, pues esta interfaz espera el cliente
    public function open(): void
    {
        // En el metodo open, usamos el metodo turnOn de la interfaz eReaderInterface [kindle, pdfReader]
        $this->reader->turnOn();
    }

    public function nextPage(): void
    {
        $this->reader->pressNextButton();
    }
}